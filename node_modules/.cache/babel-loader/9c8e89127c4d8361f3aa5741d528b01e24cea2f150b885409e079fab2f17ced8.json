{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KAY\\\\Desktop\\\\versified-password\\\\react-password-generator\\\\src\\\\pages\\\\register.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './register.css';\nimport { useFormik } from 'formik';\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Register = props => {\n  _s();\n  const [phone, setPhone] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(email);\n  };\n  const formik = useFormik({\n    initialValues: {\n      email: \"\"\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().email(\"Invalid email address\").required(\"Required\")\n    }),\n    onSubmit: () => {\n      formik.preventDefault();\n      // console.log(formik.values);\n    }\n  });\n\n  console.log(formik.errors);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"head-text\",\n      children: \"Enter Email/Phone to recieve token\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"email\",\n        name: \"email\",\n        type: \"email\",\n        placeholder: \"enter your email\",\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        value: formik.values.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 3\n      }, this), formik.errors.email ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: formik.errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 38\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"send-btn\",\n        type: \"submit\",\n        onClick: () => props.onFormSwitch(\"loginForm\"),\n        children: \" Verify \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"link-btn\",\n      type: \"button\",\n      onClick: () => props.onFormSwitch(\"Phone\"),\n      children: \" Use phone instead \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 10\n  }, this);\n};\n_s(Register, \"YhAYbZ0icucUcQk3eytaCdm4ygQ=\", false, function () {\n  return [useFormik];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useFormik","Yup","Register","props","phone","setPhone","email","setEmail","handleSubmit","e","preventDefault","console","log","formik","initialValues","validationSchema","object","string","required","onSubmit","errors","handleChange","handleBlur","values","onFormSwitch"],"sources":["C:/Users/KAY/Desktop/versified-password/react-password-generator/src/pages/register.jsx"],"sourcesContent":["import React, {useState} from \"react\"\r\nimport './register.css';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from \"yup\";\r\n\r\n\r\nexport const  Register = (props) => {\r\n  const[phone, setPhone]  = useState(\"\");\r\n  const[email, setEmail]  = useState(\"\");\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        \r\n            console.log(email)\r\n    };\r\n \r\n     const formik = useFormik( {\r\n      initialValues:{\r\n           email:\"\"\r\n           \r\n      },\r\n      validationSchema: Yup.object({\r\n       email: Yup.string().email(\"Invalid email address\").required(\"Required\")\r\n\r\n      }),\r\n      onSubmit:  () => {\r\n            formik.preventDefault()\r\n      // console.log(formik.values);\r\n      \r\n      } \r\n     });\r\nconsole.log(formik.errors);\r\n     \r\n    \r\n    return (\r\n       \r\n         <div>\r\n         <h2 className =\"head-text\">Enter Email/Phone to recieve token</h2>\r\n          <form className=\"login-form\"  >\r\n          <label htmlFor=\"email\">Email</label>\r\n\t\t<input id=\"email\" \r\n             name=\"email\"\r\n             type=\"email\"\r\n             placeholder=\"enter your email\"\r\n             onChange={formik.handleChange} \r\n             onBlur={formik.handleBlur}\r\n             value= {formik.values.email}\r\n             />\r\n             { formik.errors.email ? <p >{formik.errors.email}</p> : null}\r\n\r\n             <button className=\"send-btn\"  type=\"submit\" onClick={() => props.onFormSwitch(\"loginForm\")}> Verify </button>\r\n\t\t  \r\n\t\t   {/* <button  className=\"send-btn\"  type=\"submit\"  onChange={() =>  props.onFormSwitch(\"loginForm\")}>Send</button> */}\r\n\r\n\t\t</form>\r\n\t\t<button className=\"link-btn\" type=\"button\" onClick={() => props.onFormSwitch(\"Phone\")}> Use phone instead </button>\r\n    \r\n         </div>\r\n      \r\n        \r\n    )\r\n}\r\nexport default Register;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAO,gBAAgB;AACvB,SAASC,SAAS,QAAQ,QAAQ;AAClC,OAAO,KAAKC,GAAG,MAAM,KAAK;AAAC;AAG3B,OAAO,MAAOC,QAAQ,GAAIC,KAAK,IAAK;EAAA;EAClC,MAAK,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAIN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAK,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAIR,QAAQ,CAAC,EAAE,CAAC;EAGpC,MAAMS,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,EAAE;IAEdC,OAAO,CAACC,GAAG,CAACN,KAAK,CAAC;EAC1B,CAAC;EAEA,MAAMO,MAAM,GAAGb,SAAS,CAAE;IACzBc,aAAa,EAAC;MACTR,KAAK,EAAC;IAEX,CAAC;IACDS,gBAAgB,EAAEd,GAAG,CAACe,MAAM,CAAC;MAC5BV,KAAK,EAAEL,GAAG,CAACgB,MAAM,EAAE,CAACX,KAAK,CAAC,uBAAuB,CAAC,CAACY,QAAQ,CAAC,UAAU;IAEvE,CAAC,CAAC;IACFC,QAAQ,EAAG,MAAM;MACXN,MAAM,CAACH,cAAc,EAAE;MAC7B;IAEA;EACD,CAAC,CAAC;;EACPC,OAAO,CAACC,GAAG,CAACC,MAAM,CAACO,MAAM,CAAC;EAGtB,oBAEK;IAAA,wBACA;MAAI,SAAS,EAAE,WAAW;MAAA,UAAC;IAAkC;MAAA;MAAA;MAAA;IAAA,QAAK,eACjE;MAAM,SAAS,EAAC,YAAY;MAAA,wBAC5B;QAAO,OAAO,EAAC,OAAO;QAAA,UAAC;MAAK;QAAA;QAAA;QAAA;MAAA,QAAQ,eAC5C;QAAO,EAAE,EAAC,OAAO;QACN,IAAI,EAAC,OAAO;QACZ,IAAI,EAAC,OAAO;QACZ,WAAW,EAAC,kBAAkB;QAC9B,QAAQ,EAAEP,MAAM,CAACQ,YAAa;QAC9B,MAAM,EAAER,MAAM,CAACS,UAAW;QAC1B,KAAK,EAAGT,MAAM,CAACU,MAAM,CAACjB;MAAM;QAAA;QAAA;QAAA;MAAA,QAC1B,EACAO,MAAM,CAACO,MAAM,CAACd,KAAK,gBAAG;QAAA,UAAKO,MAAM,CAACO,MAAM,CAACd;MAAK;QAAA;QAAA;QAAA;MAAA,QAAK,GAAG,IAAI,eAE5D;QAAQ,SAAS,EAAC,UAAU;QAAE,IAAI,EAAC,QAAQ;QAAC,OAAO,EAAE,MAAMH,KAAK,CAACqB,YAAY,CAAC,WAAW,CAAE;QAAA,UAAC;MAAQ;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAIjH,eACP;MAAQ,SAAS,EAAC,UAAU;MAAC,IAAI,EAAC,QAAQ;MAAC,OAAO,EAAE,MAAMrB,KAAK,CAACqB,YAAY,CAAC,OAAO,CAAE;MAAA,UAAC;IAAmB;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAEtG;AAIf,CAAC;AAAA,GAxDatB,QAAQ;EAAA,QAWFF,SAAS;AAAA;AAAA,KAXfE,QAAQ;AAyDtB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}