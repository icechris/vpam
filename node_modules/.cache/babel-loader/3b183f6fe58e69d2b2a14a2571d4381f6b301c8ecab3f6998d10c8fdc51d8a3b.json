{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KAY\\\\Desktop\\\\versified-password\\\\react-password-generator\\\\src\\\\pages\\\\number.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './register.css';\nimport { useFormik } from 'formik';\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Phone = props => {\n  _s();\n  const [phone, setPhone] = useState('');\n  const [email, setEmail] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(phone);\n  };\n  const phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n  const formik = useFormik({\n    initialValues: {\n      phone: \"\"\n    },\n    validationSchema: Yup.object({\n      phone: Yup.string().phone().required(\"Required\").matches(phoneRegExp, 'Phone number is not valid').min(10, \"too short\").max(10, \"Your digits must be up to 10\")\n    }),\n    onSubmit: () => {\n      formik.preventDefault();\n      // console.log(formik.values);\n    }\n  });\n\n  console.log(formik.errors);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"head-text\",\n      children: \"Enter Phone/Email to recieve token\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"phone\",\n        children: \"Phone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"phone\",\n        name: \"phone\",\n        type: \"tel\",\n        placeholder: \"+233\",\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        value: formik.values.number\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this), formik.errors.phone ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: formik.errors.phone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 31\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"send-btn\",\n        type: \"submit\",\n        onClick: () => props.onFormSwitch(\"loginForm\"),\n        children: \" Send \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"link-btn\",\n      onClick: () => props.onFormSwitch(\"Register\"),\n      children: \"Use Email Instead\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 10\n  }, this);\n};\n_s(Phone, \"o8HG8scVUUpHShL5Vn0CDzdt+cc=\", false, function () {\n  return [useFormik];\n});\n_c = Phone;\nexport default Phone;\nvar _c;\n$RefreshReg$(_c, \"Phone\");","map":{"version":3,"names":["React","useState","useFormik","Yup","Phone","props","phone","setPhone","email","setEmail","handleSubmit","e","preventDefault","console","log","phoneRegExp","formik","initialValues","validationSchema","object","string","required","matches","min","max","onSubmit","errors","handleChange","handleBlur","values","number","color","onFormSwitch"],"sources":["C:/Users/KAY/Desktop/versified-password/react-password-generator/src/pages/number.jsx"],"sourcesContent":["import React, {useState} from \"react\"\r\nimport './register.css'\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from \"yup\";\r\n\r\nexport const  Phone = (props) => {\r\n    const[phone, setPhone]  = useState('')\r\n    const[email, setEmail]  = useState('')\r\n\r\n   \r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n            console.log(phone);\r\n    }\r\n    const phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\r\n      \r\n\r\n       const formik = useFormik( {\r\n      initialValues:{\r\n           phone:\"\"\r\n           \r\n      },\r\n      validationSchema: Yup.object({\r\n       phone: Yup.string().phone().required(\"Required\").matches(phoneRegExp, 'Phone number is not valid')\r\n  .min(10, \"too short\")\r\n  .max(10, \"Your digits must be up to 10\"),\r\n       \r\n\r\n      }),\r\n      onSubmit:  () => {\r\n            formik.preventDefault()\r\n      // console.log(formik.values);\r\n      \r\n      } \r\n     });\r\n          console.log(formik.errors);\r\n     \r\n\r\n    \r\n    return (\r\n       \r\n         <div>\r\n         <h2 className =\"head-text\">Enter Phone/Email to recieve token</h2>\r\n             <form className=\"login-form\" >\r\n           <label htmlFor=\"phone\">Phone</label>\r\n\t\t  <input id=\"phone\" \r\n             name=\"phone\"\r\n             type=\"tel\"\r\n             placeholder=\"+233\"\r\n             onChange={formik.handleChange} \r\n             onBlur={formik.handleBlur}\r\n             \r\n             \r\n             value= {formik.values.number}\r\n             />\r\n\t\t    { formik.errors.phone ? <p style= {{ color:\"red\" }} >{formik.errors.phone}</p> : null}\r\n\r\n\t\t   <button  className=\"send-btn\"  type=\"submit\"  onClick ={() =>  props.onFormSwitch(\"loginForm\")} > Send </button>\r\n\t\t </form>\r\n\t\t<button className=\"link-btn\" onClick={() =>  props.onFormSwitch(\"Register\")}>Use Email Instead</button>\r\n         </div>\r\n      \r\n        \r\n    )\r\n}\r\nexport default Phone;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAO,gBAAgB;AACvB,SAASC,SAAS,QAAQ,QAAQ;AAClC,OAAO,KAAKC,GAAG,MAAM,KAAK;AAAC;AAE3B,OAAO,MAAOC,KAAK,GAAIC,KAAK,IAAK;EAAA;EAC7B,MAAK,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAIN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAK,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAIR,QAAQ,CAAC,EAAE,CAAC;EAItC,MAAMS,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,EAAE;IACdC,OAAO,CAACC,GAAG,CAACR,KAAK,CAAC;EAC1B,CAAC;EACD,MAAMS,WAAW,GAAG,yGAAyG;EAG1H,MAAMC,MAAM,GAAGd,SAAS,CAAE;IAC3Be,aAAa,EAAC;MACTX,KAAK,EAAC;IAEX,CAAC;IACDY,gBAAgB,EAAEf,GAAG,CAACgB,MAAM,CAAC;MAC5Bb,KAAK,EAAEH,GAAG,CAACiB,MAAM,EAAE,CAACd,KAAK,EAAE,CAACe,QAAQ,CAAC,UAAU,CAAC,CAACC,OAAO,CAACP,WAAW,EAAE,2BAA2B,CAAC,CACtGQ,GAAG,CAAC,EAAE,EAAE,WAAW,CAAC,CACpBC,GAAG,CAAC,EAAE,EAAE,8BAA8B;IAGnC,CAAC,CAAC;IACFC,QAAQ,EAAG,MAAM;MACXT,MAAM,CAACJ,cAAc,EAAE;MAC7B;IAEA;EACD,CAAC,CAAC;;EACGC,OAAO,CAACC,GAAG,CAACE,MAAM,CAACU,MAAM,CAAC;EAIhC,oBAEK;IAAA,wBACA;MAAI,SAAS,EAAE,WAAW;MAAA,UAAC;IAAkC;MAAA;MAAA;MAAA;IAAA,QAAK,eAC9D;MAAM,SAAS,EAAC,YAAY;MAAA,wBAC9B;QAAO,OAAO,EAAC,OAAO;QAAA,UAAC;MAAK;QAAA;QAAA;QAAA;MAAA,QAAQ,eAC3C;QAAO,EAAE,EAAC,OAAO;QACR,IAAI,EAAC,OAAO;QACZ,IAAI,EAAC,KAAK;QACV,WAAW,EAAC,MAAM;QAClB,QAAQ,EAAEV,MAAM,CAACW,YAAa;QAC9B,MAAM,EAAEX,MAAM,CAACY,UAAW;QAG1B,KAAK,EAAGZ,MAAM,CAACa,MAAM,CAACC;MAAO;QAAA;QAAA;QAAA;MAAA,QAC3B,EACPd,MAAM,CAACU,MAAM,CAACpB,KAAK,gBAAG;QAAG,KAAK,EAAG;UAAEyB,KAAK,EAAC;QAAM,CAAE;QAAA,UAAGf,MAAM,CAACU,MAAM,CAACpB;MAAK;QAAA;QAAA;QAAA;MAAA,QAAK,GAAG,IAAI,eAEtF;QAAS,SAAS,EAAC,UAAU;QAAE,IAAI,EAAC,QAAQ;QAAE,OAAO,EAAG,MAAOD,KAAK,CAAC2B,YAAY,CAAC,WAAW,CAAE;QAAA,UAAE;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAC3G,eACR;MAAQ,SAAS,EAAC,UAAU;MAAC,OAAO,EAAE,MAAO3B,KAAK,CAAC2B,YAAY,CAAC,UAAU,CAAE;MAAA,UAAC;IAAiB;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAC1F;AAIf,CAAC;AAAA,GA5Da5B,KAAK;EAAA,QAaGF,SAAS;AAAA;AAAA,KAbjBE,KAAK;AA6DnB,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}